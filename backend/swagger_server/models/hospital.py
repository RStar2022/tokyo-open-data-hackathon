# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.hospital_business_hours import HospitalBusinessHours  # noqa: F401,E501
from swagger_server import util


class Hospital(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, id: int=None, longitude: float=None, latitude: float=None, name: str=None, address: str=None, supported_languages: List[str]=None, examination_types: List[str]=None, business_hours: List[HospitalBusinessHours]=None, post_number: str=None, telephone: str=None, website: str=None):  # noqa: E501
        """Hospital - a model defined in Swagger

        :param id: The id of this Hospital.  # noqa: E501
        :type id: int
        :param longitude: The longitude of this Hospital.  # noqa: E501
        :type longitude: float
        :param latitude: The latitude of this Hospital.  # noqa: E501
        :type latitude: float
        :param name: The name of this Hospital.  # noqa: E501
        :type name: str
        :param address: The address of this Hospital.  # noqa: E501
        :type address: str
        :param supported_languages: The supported_languages of this Hospital.  # noqa: E501
        :type supported_languages: List[str]
        :param examination_types: The examination_types of this Hospital.  # noqa: E501
        :type examination_types: List[str]
        :param business_hours: The business_hours of this Hospital.  # noqa: E501
        :type business_hours: List[HospitalBusinessHours]
        :param post_number: The post_number of this Hospital.  # noqa: E501
        :type post_number: str
        :param telephone: The telephone of this Hospital.  # noqa: E501
        :type telephone: str
        :param website: The website of this Hospital.  # noqa: E501
        :type website: str
        """
        self.swagger_types = {
            'id': int,
            'longitude': float,
            'latitude': float,
            'name': str,
            'address': str,
            'supported_languages': List[str],
            'examination_types': List[str],
            'business_hours': List[HospitalBusinessHours],
            'post_number': str,
            'telephone': str,
            'website': str
        }

        self.attribute_map = {
            'id': 'id',
            'longitude': 'longitude',
            'latitude': 'latitude',
            'name': 'name',
            'address': 'address',
            'supported_languages': 'supportedLanguages',
            'examination_types': 'examinationTypes',
            'business_hours': 'businessHours',
            'post_number': 'postNumber',
            'telephone': 'telephone',
            'website': 'website'
        }
        self._id = id
        self._longitude = longitude
        self._latitude = latitude
        self._name = name
        self._address = address
        self._supported_languages = supported_languages
        self._examination_types = examination_types
        self._business_hours = business_hours
        self._post_number = post_number
        self._telephone = telephone
        self._website = website

    @classmethod
    def from_dict(cls, dikt) -> 'Hospital':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Hospital of this Hospital.  # noqa: E501
        :rtype: Hospital
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> int:
        """Gets the id of this Hospital.


        :return: The id of this Hospital.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id: int):
        """Sets the id of this Hospital.


        :param id: The id of this Hospital.
        :type id: int
        """

        self._id = id

    @property
    def longitude(self) -> float:
        """Gets the longitude of this Hospital.


        :return: The longitude of this Hospital.
        :rtype: float
        """
        return self._longitude

    @longitude.setter
    def longitude(self, longitude: float):
        """Sets the longitude of this Hospital.


        :param longitude: The longitude of this Hospital.
        :type longitude: float
        """

        self._longitude = longitude

    @property
    def latitude(self) -> float:
        """Gets the latitude of this Hospital.


        :return: The latitude of this Hospital.
        :rtype: float
        """
        return self._latitude

    @latitude.setter
    def latitude(self, latitude: float):
        """Sets the latitude of this Hospital.


        :param latitude: The latitude of this Hospital.
        :type latitude: float
        """

        self._latitude = latitude

    @property
    def name(self) -> str:
        """Gets the name of this Hospital.


        :return: The name of this Hospital.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this Hospital.


        :param name: The name of this Hospital.
        :type name: str
        """

        self._name = name

    @property
    def address(self) -> str:
        """Gets the address of this Hospital.


        :return: The address of this Hospital.
        :rtype: str
        """
        return self._address

    @address.setter
    def address(self, address: str):
        """Sets the address of this Hospital.


        :param address: The address of this Hospital.
        :type address: str
        """

        self._address = address

    @property
    def supported_languages(self) -> List[str]:
        """Gets the supported_languages of this Hospital.


        :return: The supported_languages of this Hospital.
        :rtype: List[str]
        """
        return self._supported_languages

    @supported_languages.setter
    def supported_languages(self, supported_languages: List[str]):
        """Sets the supported_languages of this Hospital.


        :param supported_languages: The supported_languages of this Hospital.
        :type supported_languages: List[str]
        """
        allowed_values = ["en", "jp", "ch", "kr", "vi", "esp", "pt", "fr", "de", "mya", "ne", "translator"]  # noqa: E501
        if not set(supported_languages).issubset(set(allowed_values)):
            raise ValueError(
                "Invalid values for `supported_languages` [{0}], must be a subset of [{1}]"  # noqa: E501
                .format(", ".join(map(str, set(supported_languages) - set(allowed_values))),  # noqa: E501
                        ", ".join(map(str, allowed_values)))
            )

        self._supported_languages = supported_languages

    @property
    def examination_types(self) -> List[str]:
        """Gets the examination_types of this Hospital.


        :return: The examination_types of this Hospital.
        :rtype: List[str]
        """
        return self._examination_types

    @examination_types.setter
    def examination_types(self, examination_types: List[str]):
        """Sets the examination_types of this Hospital.


        :param examination_types: The examination_types of this Hospital.
        :type examination_types: List[str]
        """

        self._examination_types = examination_types

    @property
    def business_hours(self) -> List[HospitalBusinessHours]:
        """Gets the business_hours of this Hospital.


        :return: The business_hours of this Hospital.
        :rtype: List[HospitalBusinessHours]
        """
        return self._business_hours

    @business_hours.setter
    def business_hours(self, business_hours: List[HospitalBusinessHours]):
        """Sets the business_hours of this Hospital.


        :param business_hours: The business_hours of this Hospital.
        :type business_hours: List[HospitalBusinessHours]
        """

        self._business_hours = business_hours

    @property
    def post_number(self) -> str:
        """Gets the post_number of this Hospital.


        :return: The post_number of this Hospital.
        :rtype: str
        """
        return self._post_number

    @post_number.setter
    def post_number(self, post_number: str):
        """Sets the post_number of this Hospital.


        :param post_number: The post_number of this Hospital.
        :type post_number: str
        """

        self._post_number = post_number

    @property
    def telephone(self) -> str:
        """Gets the telephone of this Hospital.


        :return: The telephone of this Hospital.
        :rtype: str
        """
        return self._telephone

    @telephone.setter
    def telephone(self, telephone: str):
        """Sets the telephone of this Hospital.


        :param telephone: The telephone of this Hospital.
        :type telephone: str
        """

        self._telephone = telephone

    @property
    def website(self) -> str:
        """Gets the website of this Hospital.


        :return: The website of this Hospital.
        :rtype: str
        """
        return self._website

    @website.setter
    def website(self, website: str):
        """Sets the website of this Hospital.


        :param website: The website of this Hospital.
        :type website: str
        """

        self._website = website
